{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\theme-switcher\\\\src\\\\components\\\\ThemeSwitcher.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport { ThemeContext } from \"../providers/ThemeProvider\";\n\nconst ThemeSwitcher = () => {\n  _s();\n\n  // No need to change *return* part\n  // You have to set themeMode based on context\n  const [themeMode, setThemeMood] = useContext(ThemeContext);\n\n  const handleThemeChange = e => {\n    console.log(themeMode);\n    return themeMode === THEME_TYPE.LIGHT ? themeMode : setThemeMood(THEME_TYPE.DARK);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"switch-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"theme-changer\",\n        type: \"checkbox\",\n        checked: themeMode === THEME_TYPE.DARK,\n        onChange: handleThemeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-color bold\",\n      children: \"Dark mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeSwitcher, \"RM341ropZ5w57pSm+I+Po/9BvQQ=\");\n\n_c = ThemeSwitcher;\nexport default ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["E:/theme-switcher/src/components/ThemeSwitcher.jsx"],"names":["React","useContext","THEME_TYPE","ThemeContext","ThemeSwitcher","themeMode","setThemeMood","handleThemeChange","e","console","log","LIGHT","DARK"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,UAAU,CAACE,YAAD,CAA5C;;AAEA,QAAMI,iBAAiB,GAAIC,CAAD,IAAO;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,WAAOA,SAAS,KAAKH,UAAU,CAACS,KAAzB,GACHN,SADG,GAEHC,YAAY,CAACJ,UAAU,CAACU,IAAZ,CAFhB;AAGD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,QAAjB;AAAA,8BACE;AACE,uBAAY,eADd;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,OAAO,EAAEP,SAAS,KAAKH,UAAU,CAACU,IAHpC;AAIE,QAAA,QAAQ,EAAEL;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1BD;;GAAMH,a;;KAAAA,a;AA4BN,eAAeA,aAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport { ThemeContext } from \"../providers/ThemeProvider\";\n\nconst ThemeSwitcher = () => {\n  // No need to change *return* part\n  // You have to set themeMode based on context\n  const [themeMode, setThemeMood] = useContext(ThemeContext);\n\n  const handleThemeChange = (e) => {\n    console.log(themeMode);\n    return themeMode === THEME_TYPE.LIGHT\n      ? themeMode\n      : setThemeMood(THEME_TYPE.DARK);\n  };\n\n  return (\n    <div className=\"switch-container\">\n      <label className=\"switch\">\n        <input\n          data-testid=\"theme-changer\"\n          type=\"checkbox\"\n          checked={themeMode === THEME_TYPE.DARK}\n          onChange={handleThemeChange}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <span className=\"text-color bold\">Dark mode</span>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n"]},"metadata":{},"sourceType":"module"}