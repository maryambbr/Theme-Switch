{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\theme-switcher\\\\src\\\\components\\\\ThemeSwitcher.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport ThemeProvider from \"../providers/ThemeProvider\";\n\nconst ThemeSwitcher = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // No need to change *return* part\n  // You have to set themeMode based on context\n  const [themeMode, setThemeMood] = useState(THEME_TYPE.LIGHT);\n\n  const handleThemeChange = e => {\n    _s();\n\n    useContext({\n      toggle: themeMode === \"LIGHT\" ? setThemeMood(\"DARK\") : themeMode\n    });\n  };\n\n  _s(handleThemeChange, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"switch-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"theme-changer\",\n        type: \"checkbox\",\n        checked: themeMode === THEME_TYPE.DARK,\n        onChange: handleThemeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-color bold\",\n      children: \"Dark mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ThemeSwitcher, \"2tozO7V2aGb+99Q/FBoCRbbMbxk=\");\n\n_c = ThemeSwitcher;\nexport default ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["E:/theme-switcher/src/components/ThemeSwitcher.jsx"],"names":["React","useContext","useState","THEME_TYPE","ThemeProvider","ThemeSwitcher","themeMode","setThemeMood","LIGHT","handleThemeChange","e","toggle","DARK"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAAA;;AAC1B;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAACC,UAAU,CAACK,KAAZ,CAA1C;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAAA;;AAC/BT,IAAAA,UAAU,CAAC;AACTU,MAAAA,MAAM,EAAEL,SAAS,KAAK,OAAd,GAAwBC,YAAY,CAAC,MAAD,CAApC,GAA+CD;AAD9C,KAAD,CAAV;AAGD,GAJD;;AAL0B,KAKpBG,iBALoB;;AAW1B,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,QAAjB;AAAA,8BACE;AACE,uBAAY,eADd;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,OAAO,EAAEH,SAAS,KAAKH,UAAU,CAACS,IAHpC;AAIE,QAAA,QAAQ,EAAEH;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzBD;;IAAMJ,a;;KAAAA,a;AA2BN,eAAeA,aAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport ThemeProvider from \"../providers/ThemeProvider\";\n\nconst ThemeSwitcher = () => {\n  // No need to change *return* part\n  // You have to set themeMode based on context\n  const [themeMode, setThemeMood] = useState(THEME_TYPE.LIGHT);\n\n  const handleThemeChange = (e) => {\n    useContext({\n      toggle: themeMode === \"LIGHT\" ? setThemeMood(\"DARK\") : themeMode,\n    });\n  };\n\n  return (\n    <div className=\"switch-container\">\n      <label className=\"switch\">\n        <input\n          data-testid=\"theme-changer\"\n          type=\"checkbox\"\n          checked={themeMode === THEME_TYPE.DARK}\n          onChange={handleThemeChange}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <span className=\"text-color bold\">Dark mode</span>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n"]},"metadata":{},"sourceType":"module"}